{"version":3,"file":"d3-graphviz.js","sources":["../src/element.js","../src/utils.js","../src/zoom.js","../src/tweening.js","../src/data.js","../src/render.js","../src/svg.js","../src/dot.js","../src/renderDot.js","../src/transition.js","../src/attributer.js","../src/engine.js","../src/images.js","../src/totalMemory.js","../src/keyMode.js","../src/fade.js","../src/tweenPaths.js","../src/tweenShapes.js","../src/convertEqualSidedPolygons.js","../src/tweenPrecision.js","../src/growEnteringEdges.js","../src/on.js","../src/onerror.js","../src/logEvents.js","../src/graphviz.js","../src/selection/graphviz.js","../src/selection/selectWithoutDataPropagation.js","../src/selection/index.js"],"sourcesContent":["import * as d3 from \"d3-selection\";\n\nexport function extractElementData(element) {\n\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n    if (attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[i];\n            var name = attribute.name;\n            var value = attribute.value;\n            datum.attributes[name] = value;\n        }\n    }\n    var transform = element.node().transform;\n    if (transform && transform.baseVal.numberOfItems != 0) {\n        var matrix = transform.baseVal.consolidate().matrix;\n        datum.translation = {x: matrix.e, y: matrix.f};\n    }\n    if (tag == 'ellipse') {\n        datum.center = {\n            x: datum.attributes.cx,\n            y: datum.attributes.cy,\n        };\n    }\n    if (tag == 'polygon') {\n        var points = element.attr('points').split(' ');\n        var x = points.map(function(p) {return p.split(',')[0]});\n        var y = points.map(function(p) {return p.split(',')[1]});\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin,\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2,\n        };\n    }\n    if (tag == 'path') {\n        datum.totalLength = element.node().getTotalLength();\n    }\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    return datum\n}\n\nexport function extractAllElementsData(element) {\n\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n        var childData = extractAllElementsData(d3.select(this));\n        childData.parent = datum;\n        datum.children.push(childData);\n    });\n    return datum;\n}\n\nexport function createElement(data) {\n\n    if (data.tag == '#text') {\n        return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n        return document.createComment(data.comment);\n    } else {\n        return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n}\n\nexport function createElementWithAttributes(data) {\n\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    for (var attributeName of Object.keys(attributes)) {\n        var attributeValue = attributes[attributeName];\n        element.attr(attributeName, attributeValue);\n    }\n    return elementNode;\n}\n\nexport function replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n        return newElementNode;\n    }, function () {\n        return element.node();\n    });\n    element.remove();\n    return newElement;\n}\n","export function shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n}\n","import * as d3 from \"d3-selection\";\nimport {zoom, zoomTransform, zoomIdentity} from \"d3-zoom\";\nimport {interpolate} from \"d3-interpolate\";\n\nexport default function(enable) {\n\n    this._zoom = enable;\n\n    if (this._zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    return this;\n}\n\nexport function createZoomBehavior() {\n\n    function zoomed() {\n        g.attr('transform', d3.event.transform);\n    }\n\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n    if (svg.size() == 0) {\n        return this;\n    }\n    this._zoomSelection = svg;\n    var extent = [0.1, 10];\n    var zoomBehavior = zoom()\n        .scaleExtent(extent)\n        .interpolate(interpolate)\n        .on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n    if (!this._active) {\n        translateZoomBehaviorTransform.call(this, g);\n    }\n    this._originalTransform = zoomTransform(svg.node());\n\n    return this;\n};\n\nexport function getTranslatedZoomTransform(selection) {\n\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var newTranslation = selection.datum().translation;\n    var t = zoomTransform(this._zoomSelection.node());\n    if (oldTranslation) {\n        t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n    t = t.translate(newTranslation.x, newTranslation.y);\n    return t;\n}\n\nexport function translateZoomBehaviorTransform(selection) {\n\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection));\n\n    // Save the selections's new translation.\n    this._translation = selection.datum().translation;\n\n    // Set the original zoom transform to the translation specified in\n    // the selection's data.\n    this._originalTransform = zoomIdentity.translate(selection.datum().translation.x, selection.datum().translation.y);\n}\n\nexport function resetZoom(transition) {\n\n    // Reset the zoom transform to the original zoom transform.\n    var selection = this._zoomSelection;\n    if (transition) {\n        selection = selection\n            .transition(transition);\n    }\n    selection\n        .call(this._zoomBehavior.transform, this._originalTransform);\n\n    return this;\n}\n","import {interpolate} from \"d3-interpolate\";\n\nexport function pathTween(points, d1) {\n    return function() {\n        var pointInterpolators = points.map(function(p) {\n            return interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n        });\n        return function(t) {\n            return t < 1 ? \"M\" + pointInterpolators.map(function(p) { return p(t); }).join(\"L\") : d1;\n        };\n    };\n}\n\nexport function pathTweenPoints(node, d1, precision) {\n    var path0 = node;\n    var path1 = path0.cloneNode();\n    var n0 = path0.getTotalLength();\n    var n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0], i = 0, dt = precision / Math.max(n0, n1);\n    while ((i += dt) < 1) distances.push(i);\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function(t) {\n        var p0 = path0.getPointAtLength(t * n0);\n        var p1 = path1.getPointAtLength(t * n1);\n        return ([[p0.x, p0.y], [p1.x, p1.y]]);\n    });\n    return points;\n}\n","export function isEdgeElementParent(datum) {\n    return (datum.attributes.class == 'edge' || (\n        datum.tag == 'a' &&\n            datum.parent.tag == 'g' &&\n            datum.parent.parent.attributes.class == 'edge'\n    ));\n}\n\nexport function isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n}\n\nexport function getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n        return datum.parent;\n    } else { // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n        return datum.parent.parent.parent;\n    }\n}\n\nexport function getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n        return e.tag == 'title';\n    });\n}\n","import * as d3 from \"d3-selection\";\nimport {transition, attrTween} from \"d3-transition\";\nimport {timeout} from \"d3-timer\";\nimport {interpolateTransformSvg} from \"d3-interpolate\";\nimport {zoomTransform} from \"d3-zoom\";\nimport {createElement, extractElementData, replaceElement} from \"./element\";\nimport {shallowCopyObject} from \"./utils\";\nimport {createZoomBehavior, getTranslatedZoomTransform, translateZoomBehaviorTransform} from \"./zoom\";\nimport {pathTween} from \"./tweening\";\nimport {isEdgeElement} from \"./data\";\nimport {isEdgeElementParent} from \"./data\";\n\nexport default function(callback) {\n\n    if (this._busy) {\n        this._queue.push(this.render.bind(this, callback));\n        return this;\n    }\n    this._dispatch.call('renderStart', this);\n\n    if (this._transitionFactory) {\n        timeout(function () { // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n            this._transition = transition(this._transitionFactory());\n            _render.call(this, callback);\n        }.bind(this), 0);\n    } else {\n        _render.call(this, callback);\n    }\n    return this;\n}\n\nfunction _render(callback) {\n\n    var transitionInstance = this._transition;\n    var fade = this._fade && transitionInstance != null;\n    var tweenPaths = this._tweenPaths;\n    var tweenShapes = this._tweenShapes;\n    var convertEqualSidedPolygons = this._convertEqualSidedPolygons;\n    var tweenPrecision = this._tweenPrecision;\n    var growEnteringEdges = this._growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n\n    function insertChildren(element) {\n        var children = element.selectAll(function () {\n            return element.node().childNodes;\n        });\n\n        children = children\n          .data(function (d) {\n              return d.children;\n          }, function (d) {\n              return d.key;\n          });\n        var childrenEnter = children\n          .enter()\n          .append(function(d) {\n              var element = createElement(d);\n              if (d.tag == '#text' && fade) {\n                  element.nodeValue = d.text;\n              }\n              return element;\n          });\n\n        if (fade || (growEnteringEdges && isEdgeElementParent(element.datum()))) {\n            var childElementsEnter = childrenEnter\n                .filter(function(d) {\n                    return d.tag[0] == '#' ? null : this;\n                })\n                .each(function (d) {\n                    var childEnter = d3.select(this);\n                    for (var attributeName of Object.keys(d.attributes)) {\n                        var attributeValue = d.attributes[attributeName];\n                        childEnter\n                            .attr(attributeName, attributeValue);\n                    }\n                });\n            childElementsEnter\n              .filter(function(d) {\n                    return d.tag == 'svg' || d.tag == 'g' ? null : this;\n              })\n                .style(\"opacity\", 0.0);\n        }\n        var childrenExit = children\n          .exit();\n        if (attributer) {\n            childrenExit.each(attributer);\n        }\n        if (transitionInstance) {\n            childrenExit = childrenExit\n                .transition(transitionInstance);\n            if (fade) {\n                childrenExit\n                  .filter(function(d) {\n                      return d.tag[0] == '#' ? null : this;\n                  })\n                    .style(\"opacity\", 0.0);\n            }\n        }\n        childrenExit = childrenExit\n            .remove()\n        children = childrenEnter\n            .merge(children);\n        children.each(attributeElement);\n    }\n\n    function attributeElement(data) {\n        var element = d3.select(this);\n        if (attributer) {\n            element.each(attributer);\n        }\n        var tag = data.tag;\n        var attributes = data.attributes;\n        var convertShape = false;\n        if (tweenShapes && transitionInstance && data.alternativeOld) {\n            if (this.nodeName == 'polygon' || this.nodeName == 'ellipse') {\n                convertShape = true;\n                var prevData = extractElementData(element);\n                if (this.nodeName == 'polygon' && tag == 'polygon') {\n                    var prevPoints = prevData.attributes.points;\n                    if (!convertEqualSidedPolygons) {\n                        var nPrevPoints = prevPoints.split(' ').length;\n                        var points = data.attributes.points;\n                        var nPoints = points.split(' ').length;\n                        if (nPoints == nPrevPoints) {\n                            convertShape = false;\n                        }\n                    }\n                }\n            }\n            if (convertShape) {\n                var prevPathData = data.alternativeOld;\n                var pathElement = replaceElement(element, prevPathData);\n                pathElement.data([data], function () {\n                    return data.key;\n                });\n                var newPathData = data.alternativeNew;\n                element = pathElement;\n                tag = 'path';\n                attributes = newPathData.attributes;\n            }\n        }\n        var elementTransition = element;\n        if (transitionInstance) {\n            elementTransition = elementTransition\n                .transition(transitionInstance);\n            if (fade) {\n                elementTransition\n                  .filter(function(d) {\n                      return d.tag[0] == '#' ? null : this;\n                  })\n                    .style(\"opacity\", 1.0);\n            }\n            elementTransition\n              .filter(function(d) {\n                  return d.tag[0] == '#' ? null : this;\n              })\n                .on(\"end\", function() {\n                    d3.select(this)\n                        .attr('style', null);\n                });\n        }\n        var growThisPath = growEnteringEdges && tag == 'path' && data.offset;\n        if (growThisPath) {\n            var totalLength = data.totalLength;\n            element\n                .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n                .attr(\"stroke-dashoffset\", totalLength)\n                .attr('transform', 'translate(' + data.offset.x + ',' + data.offset.y + ')');\n            elementTransition\n                .attr(\"stroke-dashoffset\", 0)\n                .attr('transform', 'translate(0,0)')\n                .on(\"start\", function() {\n                    d3.select(this)\n                        .style('opacity', null);\n                })\n                .on(\"end\", function() {\n                    d3.select(this)\n                        .attr('stroke-dashoffset', null)\n                        .attr('stroke-dasharray', null)\n                        .attr('transform', null);\n                });\n        }\n        var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data) && data.offset;\n        if (moveThisPolygon) {\n            var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n            var p0 = edgePath.node().getPointAtLength(0);\n            var p1 = edgePath.node().getPointAtLength(data.totalLength);\n            var p2 = edgePath.node().getPointAtLength(data.totalLength - 1);\n            var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n            var x = p0.x - p1.x + data.offset.x;\n            var y = p0.y - p1.y + data.offset.y;\n            element\n                .attr('transform', 'translate(' + x + ',' + y + ')');\n            elementTransition\n                .attrTween(\"transform\", function () {\n                    return function (t) {\n                        var p = edgePath.node().getPointAtLength(data.totalLength * t);\n                        var p2 = edgePath.node().getPointAtLength(data.totalLength * t + 1);\n                        var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n                        x = p.x - p1.x + data.offset.x * (1 - t);\n                        y = p.y - p1.y + data.offset.y * (1 - t);\n                        return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n                    }\n                })\n                .on(\"start\", function() {\n                    d3.select(this)\n                        .style('opacity', null);\n                })\n                .on(\"end\", function() {\n                    d3.select(this).attr('transform', null);\n                });\n        }\n        var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n        for (var attributeName of Object.keys(attributes)) {\n            var attributeValue = attributes[attributeName];\n            if (tweenThisPath && attributeName == 'd') {\n                var points = (data.alternativeOld || data).points;\n                if (points) {\n                    elementTransition\n                        .attrTween(\"d\", pathTween(points, attributeValue));\n                }\n            } else {\n                if (attributeName == 'transform' && data.translation) {\n                    var onEnd = elementTransition.on(\"end\");\n                    elementTransition\n                        .on(\"start\", function () {\n                            if (graphvizInstance._zoomBehavior) {\n                                // Update the transform to transition to, just before the transition starts\n                                // in order to catch changes between the transition scheduling to its start.\n                                elementTransition\n                                    .tween(\"attr.transform\", function() {\n                                        var node = this;\n                                        return function(t) {\n                                            node.setAttribute(\"transform\", interpolateTransformSvg(zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                                        };\n                                    });\n                            }\n                        })\n                        .on(\"end\", function () {\n                            onEnd.call(this);\n                            // Update the zoom transform to the new translated transform\n                            if (graphvizInstance._zoomBehavior) {\n                                translateZoomBehaviorTransform.call(graphvizInstance, element);\n                            }\n                        })\n                }\n                elementTransition\n                    .attr(attributeName, attributeValue);\n            }\n        }\n        if (convertShape) {\n            elementTransition\n                .on(\"end\", function (d, i, nodes) {\n                    pathElement = d3.select(this);\n                    var newElement = replaceElement(pathElement, d);\n                    newElement.data([d], function () {\n                        return d.key;\n                    });\n                })\n        }\n        if (data.text) {\n            elementTransition\n                .text(data.text);\n        }\n        insertChildren(element);\n    }\n\n    var root = this._selection;\n\n    if (transitionInstance != null) {\n        // Ensure original SVG shape elements are restored after transition before rendering new graph\n        var jobs = this._jobs;\n        if (graphvizInstance._active) {\n            jobs.push(null);\n            return this;\n        } else {\n            root\n              .transition(transitionInstance)\n              .transition()\n                .duration(0)\n                .on(\"end\" , function () {\n                    graphvizInstance._active = false;\n                    if (jobs.length != 0) {\n                        jobs.shift();\n                        graphvizInstance.render();\n                    }\n                });\n            this._active = true;\n        }\n    }\n\n    if (transitionInstance != null) {\n        root\n          .transition(transitionInstance)\n            .on(\"start\" , function () {\n                graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n            })\n            .on(\"end\" , function () {\n                graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n            })\n          .transition()\n            .duration(0)\n            .on(\"start\" , function () {\n                graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n                graphvizInstance._dispatch.call('end', graphvizInstance);\n                if (callback) {\n                    callback.call(graphvizInstance);\n                }\n            });\n    }\n\n    var data = this._data;\n\n    var svg = root\n      .selectAll(\"svg\")\n        .data([data], function (d) {return d.key});\n    svg = svg\n      .enter()\n      .append(\"svg\")\n      .merge(svg);\n\n    attributeElement.call(svg.node(), data);\n\n\n    if (this._zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n\n    if (transitionInstance == null) {\n        this._dispatch.call('end', this);\n        if (callback) {\n            callback.call(this);\n        }\n    }\n\n    return this;\n};\n","import {shallowCopyObject} from \"./utils\";\n\nexport function convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var newPointsString = originalAttributes.points;\n        if (guideData.tag == 'polygon') {\n            var bbox = originalData.bbox;\n            bbox.cx = bbox.x + bbox.width / 2;\n            bbox.cy = bbox.y + bbox.height / 2;\n            var pointsString = originalAttributes.points;\n            var pointStrings = pointsString.split(' ');\n            var normPoints = pointStrings.map(function(p) {var xy = p.split(','); return [xy[0] - bbox.cx, xy[1] - bbox.cy]});\n            var x0 = normPoints[normPoints.length - 1][0];\n            var y0 = normPoints[normPoints.length - 1][1];\n            for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n                var x1 = normPoints[i][0];\n                var y1 = normPoints[i][1];\n                var dx = x1 - x0;\n                var dy = y1 - y0;\n                if (dy == 0) {\n                    continue;\n                } else {\n                    var x2 = x0 - y0 * dx / dy;\n                }\n                if (0 <= x2 && x2 < Infinity && ((x0 <= x2 && x2 <= x1) || (x1 <= x2 && x2 <= x0))) {\n                    break;\n                }\n            }\n            var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n            newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n            newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n            newPointsString = newPointStrings.join(' ');\n        }\n        newAttributes['d'] = 'M' + newPointsString + 'z';\n        delete newAttributes.points;\n        newData.attributes = newAttributes;\n    } else /* if (originalData.tag == 'ellipse') */ {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var cx = originalAttributes.cx;\n        var cy = originalAttributes.cy;\n        var rx = originalAttributes.rx;\n        var ry = originalAttributes.ry;\n        var bbox = guideData.bbox;\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n        var p = guideData.attributes.points.split(' ')[0].split(',');\n        var sx = p[0];\n        var sy = p[1];\n        var dx = sx - bbox.cx;\n        var dy = sy - bbox.cy;\n        var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n        var cosA = dx / l;\n        var sinA = -dy / l;\n        var x1 = rx * cosA;\n        var y1 = -ry * sinA;\n        var x2 = rx * (-cosA);\n        var y2 = -ry * (-sinA);\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        newAttributes['d'] = 'M '  +  cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n        delete newAttributes.cx;\n        delete newAttributes.cy;\n        delete newAttributes.rx;\n        delete newAttributes.ry;\n        newData.attributes = newAttributes;\n    }\n    return newData;\n}\n","import * as Viz from \"viz.js\";\nimport * as d3 from \"d3-selection\";\nimport {extractAllElementsData, extractElementData, createElementWithAttributes} from \"./element\";\nimport {convertToPathData} from \"./svg\";\nimport {pathTweenPoints} from \"./tweening\";\nimport {isEdgeElement} from \"./data\";\nimport {getEdgeTitle} from \"./data\";\n\n\nexport function initViz() {\n    // force JIT compilation of Viz.js\n    if (this._worker == null) {\n        Viz(\"\");\n        this._dispatch.call(\"initEnd\", this);\n    } else {\n        var scripts = d3.selectAll('script');\n        var vizScript = scripts.filter(function() {\n            return d3.select(this).attr('type') == 'javascript/worker';\n        });\n        var vizURL = vizScript.attr('src');\n        var graphvizInstance = this;\n        this._worker.onmessage = function(event) {\n            graphvizInstance._dispatch.call(\"initEnd\", this);\n        };\n        if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n            // Local URL. Prepend with local domain to be usable in web worker\n            vizURL = document.location.protocol + '//' + document.location.host + '/' + vizURL;\n        }\n        this._worker.postMessage({dot: \"\", vizURL: vizURL});\n    }\n}\n\nexport default function(src, callback) {\n\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._engine;\n    var images = this._images;\n    var totalMemory = this._totalMemory;\n    var keyMode = this._keyMode;\n    var tweenPaths = this._tweenPaths;\n    var tweenShapes = this._tweenShapes;\n    var tweenPrecision = this._tweenPrecision;\n    var growEnteringEdges = this._growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n\n    function setKey(datum, index) {\n        var tag = datum.tag;\n        if (keyMode == 'index') {\n            datum.key = index;\n        } else if (tag[0] != '#') {\n            if (keyMode == 'id') {\n                datum.key = datum.attributes.id;\n            } else if (keyMode == 'title') {\n                var title = datum.children.find(function (childData) {\n                    return childData.tag == 'title';\n                });\n                if (title) {\n                    datum.key = title.children[0].text;\n                }\n            }\n        }\n        if (datum.key == null) {\n            if (tweenShapes) {\n                if (tag == 'ellipse' || tag == 'polygon') {\n                    tag = 'path';\n                }\n            }\n            datum.key = tag + '-' + index;\n        }\n    }\n\n    function setId(datum, parentData) {\n        var id = (parentData ? parentData.id + '.' : '') + datum.key;\n        datum.id = id;\n    }\n\n    function addToDictionary(datum) {\n        dictionary[datum.id] = datum;\n    }\n\n    function calculateAlternativeShapeData(datum, prevDatum) {\n        if (tweenShapes && datum.id in prevDictionary) {\n            if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n                datum.alternativeOld = convertToPathData(prevDatum, datum);\n                datum.alternativeNew = convertToPathData(datum, prevDatum);\n            }\n        }\n    }\n\n    function calculatePathTweenPoints(datum, prevDatum) {\n        if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || (datum.alternativeOld && datum.alternativeOld.tag == 'path'))) {\n            var attribute_d = (datum.alternativeNew || datum).attributes.d;\n            if (datum.alternativeOld) {\n                var oldNode = createElementWithAttributes(datum.alternativeOld);\n            } else {\n                var oldNode = createElementWithAttributes(prevDatum);\n            }\n            (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision);\n        }\n    }\n\n    function postProcessDataPass1Local(datum, index=0, parentData) {\n        setKey(datum, index);\n        setId(datum, parentData);\n        var id = datum.id;\n        var prevDatum = prevDictionary[id];\n        addToDictionary(datum);\n        calculateAlternativeShapeData(datum, prevDatum);\n        calculatePathTweenPoints(datum, prevDatum);\n        var childTagIndexes = {};\n        datum.children.forEach(function (childData) {\n            var childTag = childData.tag;\n            if (childTag == 'ellipse' || childTag == 'polygon') {\n                childTag = 'path';\n            }\n            if (childTagIndexes[childTag] == null) {\n                childTagIndexes[childTag] = 0;\n            }\n            var childIndex = childTagIndexes[childTag]++;\n            postProcessDataPass1Local(childData, childIndex, datum);\n        });\n    }\n\n    function addToNodeDictionary(datum) {\n        var tag = datum.tag;\n        if (growEnteringEdges && datum.parent) {\n            if (datum.parent.attributes.class == 'node') {\n                if (tag == 'title') {\n                    var child = datum.children[0];\n                    var nodeId = child.text;\n                    nodeDictionary[nodeId] = datum.parent;\n                }\n            }\n        }\n    }\n\n    function extractGrowingEdgesData(datum) {\n        var id = datum.id;\n        var tag = datum.tag;\n        var prevDatum = prevDictionary[id];\n        if (growEnteringEdges && !prevDatum && datum.parent) {\n            if (isEdgeElement(datum)) {\n                if (tag == 'path' || tag == 'polygon') {\n                    if (tag == 'polygon') {\n                        var path = datum.parent.children.find(function (e) {\n                            return e.tag == 'path';\n                        });\n                        datum.totalLength = path.totalLength;\n                    }\n                    var title = getEdgeTitle(datum);\n                    var child = title.children[0];\n                    var nodeIds = child.text.split('->');\n                    if (nodeIds.length != 2) {\n                        nodeIds = child.text.split('--');\n                    }\n                    var startNodeId = nodeIds[0];\n                    var startNode = nodeDictionary[startNodeId];\n                    var prevStartNode = prevNodeDictionary[startNodeId];\n                    if (prevStartNode) {\n                        if (startNode.children[3].tag == 'g' && startNode.children[3].children[0].tag == 'a') {\n                            startNode = startNode.children[3].children[0];\n                        }\n                        if (prevStartNode.children[3].tag == 'g' && prevStartNode.children[3].children[0].tag == 'a') {\n                            prevStartNode = prevStartNode.children[3].children[0];\n                        }\n                        var startShapes = startNode.children;\n                        for (var i = 0; i < startShapes.length; i++) {\n                            if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse') {\n                                var startShape = startShapes[i];\n                                break;\n                            }\n                        }\n                        if (typeof startShape == 'undefined') {\n                            throw Error('Unsupported start shape of node ' + startNodeId + '.\\nPlease file an issue at https://github.com/magjac/d3-graphviz/issues');\n                        }\n                        var prevStartShapes = prevStartNode.children;\n                        for (var i = 0; i < prevStartShapes.length; i++) {\n                            if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse') {\n                                var prevStartShape = prevStartShapes[i];\n                                break;\n                            }\n                        }\n                        if (typeof prevStartShape == 'undefined') {\n                            throw Error('Unsupported previuous start shape of node ' + startNodeId + '.\\nPlease file an issue at https://github.com/magjac/d3-graphviz/issues');\n                        }\n                        datum.offset = {\n                            x: prevStartShape.center.x - startShape.center.x,\n                            y: prevStartShape.center.y - startShape.center.y,\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function postProcessDataPass2Global(datum) {\n        addToNodeDictionary(datum);\n        extractGrowingEdgesData(datum);\n        datum.children.forEach(function (childData) {\n            postProcessDataPass2Global(childData);\n        });\n    }\n\n    this._dispatch.call(\"start\", this);\n    this._busy = true;\n    this._dispatch.call(\"layoutStart\", this);\n    var vizOptions = {\n        format: \"svg\",\n        engine: engine,\n        images: images,\n        totalMemory: totalMemory,\n    };\n    if (this._worker) {\n        worker.postMessage({\n            dot: src,\n            options: vizOptions,\n        });\n\n        worker.onmessage = function(event) {\n            switch (event.data.type) {\n            case \"done\":\n                return layoutDone.call(graphvizInstance, event.data.svg);\n            case \"error\":\n                if (graphvizInstance._onerror) {\n                    graphvizInstance._onerror(event.data.error);\n                } else {\n                    throw event.data.error\n                }\n                break;\n            }\n        };\n    } else {\n        try {\n            var svgDoc = Viz(src, vizOptions);\n        }\n        catch(error) {\n            if (graphvizInstance._onerror) {\n                graphvizInstance._onerror(error.message);\n                return;\n            } else {\n                throw error.message\n            }\n        }\n        layoutDone.call(this, svgDoc);\n    }\n\n    function layoutDone(svgDoc) {\n        this._dispatch.call(\"layoutEnd\", this);\n\n        var newDoc = d3.select(document.createDocumentFragment())\n            .append('div');\n\n        var parser = new window.DOMParser();\n        var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n\n        newDoc\n            .append(function() {\n                return doc.documentElement;\n            });\n\n        var newSvg = newDoc\n          .select('svg');\n\n        var data = extractAllElementsData(newSvg);\n        this._dispatch.call('dataExtractEnd', this);\n        postProcessDataPass1Local(data);\n        this._dispatch.call('dataProcessPass1End', this);\n        postProcessDataPass2Global(data);\n        this._dispatch.call('dataProcessPass2End', this);\n        this._data = data;\n        this._dictionary = dictionary;\n        this._nodeDictionary = nodeDictionary;\n\n        this._extractData = function (element, childIndex, parentData) {\n            var data = extractAllElementsData(element);\n            postProcessDataPass1Local(data, childIndex, parentData);\n            postProcessDataPass2Global(data);\n            return data;\n        }\n        this._busy = false;\n        this._dispatch.call('dataProcessEnd', this);\n        if (callback) {\n            callback.call(this);\n        }\n        if (this._queue.length > 0) {\n            var job = this._queue.shift();\n            job.call(this);\n        }\n    }\n\n    return this;\n};\n","export default function(src, callback) {\n\n    var graphvizInstance = this;\n\n    this\n        .dot(src, render);\n\n    function render() {\n        graphvizInstance\n            .render(callback);\n    }\n\n    return this;\n};\n","import {transition} from \"d3-transition\";\nimport {active as d3_active} from \"d3-transition\";\n\nexport default function(name) {\n\n    if (name instanceof Function) {\n        this._transitionFactory = name;\n    } else {\n        this._transition = transition(name);\n    }\n\n    return this;\n};\n\nexport function active(name) {\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    if (svg.size() != 0) {\n        return d3_active(svg.node(), name);\n    } else {\n        return null;\n    }\n};\n","export default function(callback) {\n\n    this._attributer = callback;\n\n    return this;\n};\n","export default function(engine) {\n\n    if (engine != this._engine && this._data != null) {\n        throw Error('Too late to change engine');\n    }\n    this._engine = engine;\n\n    return this;\n};\n","export default function(path, width, height) {\n\n    this._images.push({path:path, width: width, height:height})\n\n    return this;\n};\n","export default function(size) {\n\n    this._totalMemory = size\n\n    return this;\n};\n","export default function(keyMode) {\n\n    if (!this._keyModes.has(keyMode)) {\n        throw Error('Illegal keyMode: ' + keyMode);\n    }\n    if (keyMode != this._keyMode && this._data != null) {\n        throw Error('Too late to change keyMode');\n    }\n    this._keyMode = keyMode;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._fade = enable\n\n    return this;\n};\n","export default function(enable) {\n\n    this._tweenPaths = enable;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._tweenShapes = enable;\n    if (enable) {\n        this._tweenPaths = true;\n    }\n\n    return this;\n};\n","export default function(enable) {\n\n    this._convertEqualSidedPolygons = enable;\n\n    return this;\n};\n","export default function(precision) {\n\n    this._tweenPrecision = precision;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._growEnteringEdges = enable;\n\n    return this;\n};\n","export default function(typenames, callback) {\n\n    this._dispatch.on(typenames, callback);\n\n    return this;\n};\n","export default function(callback) {\n\n    this._onerror = callback\n\n    return this;\n};\n","import {format} from \"d3-format\";\n\nexport default function(enable) {\n\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max(...(eventTypes.map(eventType => eventType.length)));\n    for (let i in eventTypes) {\n        let eventType = eventTypes[i];\n        times[eventType] = [];\n        var graphvizInstance = this;\n        var expectedDelay;\n        var expectedDuration;\n        this\n            .on(eventType + '.log', enable ? function () {\n                var t = Date.now();\n                var seqNo = times[eventType].length;\n                times[eventType].push(t);\n                var string = '';\n                string += 'Event ';\n                string += format(' >2')(i) + ' ';\n                string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n                string += format(' >5')(t - t0) + ' ';\n                if (eventType != 'initEnd') {\n                    string += format(' >5')(t - times['start'][seqNo]);\n                }\n                if (eventType == 'dataProcessEnd') {\n                    string += ' prepare                 ' + format(' >5')((t - times['layoutEnd'][seqNo]));\n                }\n                if (eventType == 'renderEnd' && graphvizInstance._transition) {\n                    string += ' transition start margin ' + format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n                    expectedDelay = graphvizInstance._transition.delay();\n                    expectedDuration = graphvizInstance._transition.duration();\n                }\n                if (eventType == 'transitionStart') {\n                    var actualDelay = (t - times['renderStart'][seqNo])\n                    string += ' transition delay        ' + format(' >5')(t - times['renderStart'][seqNo]);\n                    string += ' expected ' + format(' >5')(expectedDelay);\n                    string += ' diff ' + format(' >5')(actualDelay - expectedDelay);\n                }\n                if (eventType == 'transitionEnd') {\n                    var actualDuration = t - times['transitionStart'][seqNo]\n                    string += ' transition duration     ' + format(' >5')(actualDuration);\n                    string += ' expected ' + format(' >5')(expectedDuration);\n                    string += ' diff ' + format(' >5')(actualDuration - expectedDuration);\n                }\n                console.log(string);\n                t0 = t;\n            } : null);\n    }\n    return this;\n}\n","import * as d3 from \"d3-selection\";\nimport {dispatch} from \"d3-dispatch\";\nimport render from \"./render\";\nimport dot from \"./dot\";\nimport {initViz} from \"./dot\";\nimport renderDot from \"./renderDot\";\nimport transition from \"./transition\";\nimport {active} from \"./transition\";\nimport attributer from \"./attributer\";\nimport engine from \"./engine\";\nimport images from \"./images\";\nimport totalMemory from \"./totalMemory\";\nimport keyMode from \"./keyMode\";\nimport fade from \"./fade\";\nimport tweenPaths from \"./tweenPaths\";\nimport tweenShapes from \"./tweenShapes\";\nimport convertEqualSidedPolygons from \"./convertEqualSidedPolygons\";\nimport tweenPrecision from \"./tweenPrecision\";\nimport growEnteringEdges from \"./growEnteringEdges\";\nimport zoom from \"./zoom\";\nimport {resetZoom} from \"./zoom\";\nimport on from \"./on\";\nimport onerror from \"./onerror\";\nimport logEvents from \"./logEvents\";\n\nexport function Graphviz(selection) {\n    if (typeof Worker != 'undefined') {\n        var js = `\n            onmessage = function(event) {\n                if (event.data.vizURL) {\n                    importScripts(event.data.vizURL);\n                }\n                try {\n                    var svg = Viz(event.data.dot, event.data.options);\n                }\n                catch(error) {\n                    postMessage({\n                        type: \"error\",\n                        error: error.message,\n                    });\n                    return;\n                }\n                if (svg) {\n                    postMessage({\n                        type: \"done\",\n                        svg: svg,\n                    });\n                } else {\n                    postMessage({\n                        type: \"skip\",\n                    });\n                }\n            }\n        `;\n        var blob = new Blob([js]);\n        var blobURL = window.URL.createObjectURL(blob);\n        this._worker = new Worker(blobURL);\n    }\n    this._selection = selection;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set([\n        'title',\n        'id',\n        'tag-index',\n        'index'\n    ]);\n    this._engine = 'dot';\n    this._images = [];\n    this._totalMemory = undefined;\n    this._keyMode = 'title';\n    this._fade = true;\n    this._tweenPaths = true;\n    this._tweenShapes = true;\n    this._convertEqualSidedPolygons = true;\n    this._tweenPrecision = 1;\n    this._growEnteringEdges = true;\n    this._translation = undefined;\n    this._zoom = true;\n    this._eventTypes = [\n        'initEnd',\n        'start',\n        'layoutStart',\n        'layoutEnd',\n        'dataExtractEnd',\n        'dataProcessPass1End',\n        'dataProcessPass2End',\n        'dataProcessEnd',\n        'renderStart',\n        'renderEnd',\n        'transitionStart',\n        'transitionEnd',\n        'restoreEnd',\n        'end'\n    ];\n    this._dispatch = dispatch(...this._eventTypes);\n    initViz.call(this);\n}\n\nexport default function graphviz(selector) {\n    var g = new Graphviz(d3.select(selector));\n    return g;\n}\n\nGraphviz.prototype = graphviz.prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    totalMemory: totalMemory,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom,\n    resetZoom: resetZoom,\n    render: render,\n    dot: dot,\n    renderDot: renderDot,\n    transition: transition,\n    active: active,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n};\n","import {Graphviz} from \"../graphviz\";\n\nexport default function() {\n\n  return new Graphviz(this);\n}\n","import * as d3 from \"d3-selection\";\n\nexport default function(name) {\n\n  return d3.select(this.node().querySelector(name));\n}\n","import {selection} from \"d3-selection\";\nimport selection_graphviz from \"./graphviz\";\nimport selection_selectWithoutDataPropagation from \"./selectWithoutDataPropagation\";\n\nselection.prototype.graphviz = selection_graphviz;\nselection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n"],"names":["zoomTransform","interpolate","zoom","zoomIdentity","transition","timeout","interpolateTransformSvg","d3_active","active","format","dispatch","selection"],"mappings":"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"}